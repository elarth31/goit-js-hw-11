{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_ENDPOINT = 'https://pixabay.com/api/';\nconst ACCESS_KEY = '46767628-a1a0fbec2a5b02d371c47f484';\n\nexport async function fetchImages(searchTerm) {\n    const searchParams = new URLSearchParams({\n        key: ACCESS_KEY,\n        q: searchTerm,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n    });\n\n    try {\n        const serverResponse = await fetch(`${API_ENDPOINT}?${searchParams}`);\n        console.log(serverResponse);\n\n        if (!serverResponse.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const responseData = await serverResponse.json();\n        return responseData.hits; \n    } catch (error) {\n        console.error('Error fetching images:', error);\n    }\n}\n","export function createMarkup(arr) {\n    return arr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n        `<li class=\"gallery-item\">\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img\n                    class=\"gallery-image\"\n                    src=\"${webformatURL}\"\n                    alt=\"${tags}\"\n                    width=\"360\"\n                />\n            </a>\n            <div class=\"thumb-block\">\n                <div class=\"block\">\n                    <h2 class=\"title\">Likes</h2>\n                    <p class=\"amount\">${likes}</p>\n                </div>\n                <div class=\"block\">\n                    <h2 class=\"title\">Views</h2>\n                    <p class=\"amount\">${views}</p>\n                </div>\n                <div class=\"block\">\n                    <h2 class=\"title\">Comments</h2>\n                    <p class=\"amount\">${comments}</p>\n                </div>\n                <div class=\"block\">\n                    <h2 class=\"title\">Downloads</h2>\n                    <p class=\"amount\">${downloads}</p>\n                </div>\n            </div>\n        </li>`)\n        .join('');\n}\n\nexport function displayErrorMessage(errorText) {\n    iziToast.error({\n        title: 'Error',\n        message: errorText,\n    });\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { createMarkup } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst searchFormElement = document.querySelector('.js-search');\nconst imagesGalleryElement = document.querySelector('.gallery');\nconst loadingSpinnerElement = document.querySelector('.loader');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n    captions: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n});\n\nloadingSpinnerElement.style.display = 'none';\nsearchFormElement.addEventListener('submit', onSearch);\n\nfunction onSearch(event) {\n    event.preventDefault();\n    imagesGalleryElement.innerHTML = '';\n    loadingSpinnerElement.style.display = 'block';\n\n    const inputValue = event.target.elements.search.value.trim();\n\n    if (!inputValue) {\n        loadingSpinnerElement.style.display = 'none';\n        displayError('Please enter a search term!'); \n        return;\n    }\n\n    fetchImages(inputValue)\n        .then(data => {\n            loadingSpinnerElement.style.display = 'none';\n\n            if (!data.length) {\n                displayError('Sorry, there are no images matching your search query. Please try again!');\n                return;\n            }\n\n            imagesGalleryElement.innerHTML = createMarkup(data);\n            lightbox.refresh(); \n            searchFormElement.reset();\n        })\n        .catch(err => {\n            loadingSpinnerElement.style.display = 'none';\n            console.error(err);\n            displayError('An error occurred. Please try again later.');\n        });\n}\n\n\nfunction displayError(message) {\n    iziToast.error({\n        title: 'Error',\n        message: message,\n        position: 'topRight',\n    });\n}\n"],"names":["API_ENDPOINT","ACCESS_KEY","fetchImages","searchTerm","searchParams","serverResponse","error","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","searchFormElement","imagesGalleryElement","loadingSpinnerElement","lightbox","SimpleLightbox","onSearch","event","inputValue","displayError","data","err","message","iziToast"],"mappings":"6vBAAA,MAAMA,EAAe,2BACfC,EAAa,qCAEZ,eAAeC,EAAYC,EAAY,CAC1C,MAAMC,EAAe,IAAI,gBAAgB,CACrC,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EAED,GAAI,CACA,MAAME,EAAiB,MAAM,MAAM,GAAGL,CAAY,IAAII,CAAY,EAAE,EAGpE,GAFA,QAAQ,IAAIC,CAAc,EAEtB,CAACA,EAAe,GAChB,MAAM,IAAI,MAAM,6BAA6B,EAIjD,OADqB,MAAMA,EAAe,QACtB,IACvB,OAAQC,EAAO,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,CAChD,CACL,CCzBO,SAASC,EAAaC,EAAK,CAC9B,OAAOA,EAAI,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IACpF;AAAA,4CACoCL,CAAa;AAAA;AAAA;AAAA,2BAG9BD,CAAY;AAAA,2BACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAOSC,CAAK;AAAA;AAAA;AAAA;AAAA,wCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,wCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,wCAIRC,CAAS;AAAA;AAAA;AAAA,cAGnC,EACL,KAAK,EAAE,CAChB,CCvBA,MAAMC,EAAoB,SAAS,cAAc,YAAY,EACvDC,EAAuB,SAAS,cAAc,UAAU,EACxDC,EAAwB,SAAS,cAAc,SAAS,EAExDC,EAAW,IAAIC,EAAe,aAAc,CAC9C,SAAU,GACV,aAAc,MACd,aAAc,GAClB,CAAC,EAEDF,EAAsB,MAAM,QAAU,OACtCF,EAAkB,iBAAiB,SAAUK,CAAQ,EAErD,SAASA,EAASC,EAAO,CACrBA,EAAM,eAAc,EACpBL,EAAqB,UAAY,GACjCC,EAAsB,MAAM,QAAU,QAEtC,MAAMK,EAAaD,EAAM,OAAO,SAAS,OAAO,MAAM,OAEtD,GAAI,CAACC,EAAY,CACbL,EAAsB,MAAM,QAAU,OACtCM,EAAa,6BAA6B,EAC1C,MACH,CAEDtB,EAAYqB,CAAU,EACjB,KAAKE,GAAQ,CAGV,GAFAP,EAAsB,MAAM,QAAU,OAElC,CAACO,EAAK,OAAQ,CACdD,EAAa,0EAA0E,EACvF,MACH,CAEDP,EAAqB,UAAYV,EAAakB,CAAI,EAClDN,EAAS,QAAO,EAChBH,EAAkB,MAAK,CACnC,CAAS,EACA,MAAMU,GAAO,CACVR,EAAsB,MAAM,QAAU,OACtC,QAAQ,MAAMQ,CAAG,EACjBF,EAAa,4CAA4C,CACrE,CAAS,CACT,CAGA,SAASA,EAAaG,EAAS,CAC3BC,EAAS,MAAM,CACX,MAAO,QACP,QAASD,EACT,SAAU,UAClB,CAAK,CACL"}